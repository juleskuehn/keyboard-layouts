(function() {
  var arensito, asset, azerty, bepo, bind, capewell, carpalxq, cdvorak, colemak, cqwerf, dvorak, firstTry, genKB, keyPress, klausler, kp, lowerShelf, minimak12, minimak4, minimak8, mtgap2, norman, pdvorak, qfmlwy, qgmlwb, qgmlwy, qwerty, qwkrfy, qwpr, qwyrfm, sendkeys, shiftPressed, source, target, tarmak1, tarmak2, tarmak3, tarmak4, tnwmlc, workman,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  qwerty = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', ['[', '{'], [']', '}']], ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'n', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  azerty = [[['&', '1'], ['é', '2'], ['"', '3'], ['\'', '4'], ['(', '5'], ['-', '6'], ['è', '7'], ['_', '8'], ['ç', '9'], ['à', '0'], [')', '°'], ['=', '+']], ['a', 'z', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', ['^', '¨'], ['$', '£']], ['q', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', ['ù', '%']], ['w', 'x', 'c', 'v', 'b', 'n', [',', '?'], [';', '.'], [':', '/'], ['!', '§']]];

  colemak = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'f', 'p', 'g', 'j', 'l', 'u', 'y', [';', ':'], ['[', '{'], [']', '}']], ['a', 'r', 's', 't', 'd', 'h', 'n', 'e', 'i', 'o', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'k', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  dvorak = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['[', '{'], [']', '}']], [['\'', '"'], [',', '<'], ['.', '>'], 'p', 'y', 'f', 'g', 'c', 'r', 'l', ['/', '?'], ['=', '+']], ['a', 'o', 'e', 'u', 'i', 'd', 'h', 't', 'n', 's', ['-', '_']], [[';', ':'], 'q', 'j', 'k', 'x', 'b', 'm', 'w', 'v', 'z']];

  pdvorak = [[['&', '%'], ['[', '7'], ['{', '5'], ['}', '3'], ['(', '1'], ['=', '9'], ['*', '0'], [')', '2'], ['+', '4'], [']', '6'], ['!', '8'], ['#', '`']], [[';', ':'], [',', '<'], ['.', '>'], 'p', 'y', 'f', 'g', 'c', 'r', 'l', ['/', '?'], ['@', '^']], ['a', 'o', 'e', 'u', 'i', 'd', 'h', 't', 'n', 's', ['-', '_']], [['\'', '"'], 'q', 'j', 'k', 'x', 'b', 'm', 'w', 'v', 'z']];

  workman = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'd', 'r', 'w', 'b', 'j', 'f', 'u', 'p', [';', ':'], ['[', '{'], [']', '}']], ['a', 's', 'h', 't', 'g', 'y', 'n', 'e', 'o', 'i', ['\'', '"']], ['z', 'x', 'm', 'c', 'v', 'k', 'l', [',', '<'], ['.', '>'], ['/', '?']]];

  norman = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'd', 'f', 'k', 'j', 'u', 'r', 'l', [';', ':'], ['[', '{'], [']', '}']], ['a', 's', 'e', 't', 'g', 'y', 'n', 'i', 'o', 'h', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'p', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  bepo = [[['"', '1'], ['«', '2'], ['»', '3'], ['(', '4'], [')', '5'], ['@', '6'], ['+', '7'], ['-', '8'], ['/', '9'], ['*', '0'], ['=', '°'], ['%', '`']], ['b', ['é', 'É'], 'p', 'o', ['è', 'È'], ['^', '!'], 'v', 'd', 'l', 'j', 'z', 'w'], ['a', 'u', 'i', 'e', [',', ';'], 'c', 't', 's', 'r', 'n', 'm'], [['à', 'À'], 'y', 'x', ['.', ':'], 'k', ['\'', '?'], 'q', 'g', 'h', 'f']];

  arensito = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['/', '?'], ['=', '+']], ['q', 'l', [',', '<'], 'p', ['\'', '"'], [';', ':'], 'f', 'u', 'd', 'k', ['[', '{'], [']', '}']], ['a', 'r', 'e', 'n', 'b', 'g', 's', 'i', 't', 'o', ['-', '_']], ['z', 'w', ['.', '>'], 'h', 'j', 'v', 'c', 'y', 'm', 'x']];

  qwpr = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'p', 'r', 'f', 'y', 'u', 'k', 'l', [';', ':'], ['[', '{'], [']', '}']], ['a', 's', 'd', 't', 'g', 'h', 'n', 'i', 'o', 'e', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'j', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  asset = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'j', 'f', 'g', 'y', 'p', 'u', 'l', [';', ':'], ['[', '{'], [']', '}']], ['a', 's', 'e', 't', 'd', 'h', 'n', 'i', 'o', 'r', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'k', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  mtgap2 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '<'], ['0', '>'], ['-', '_'], ['=', '+']], [[',', '('], 'f', 'h', 'd', 'k', 'j', 'c', 'u', 'l', ['.', ')'], ['[', '{'], [']', '}']], ['o', 'a', 'n', 't', 'g', 'm', 's', 'e', 'r', 'i', ['/', '?']], ['q', 'x', 'b', 'p', 'z', 'y', 'w', ['\'', '"'], 'v', [';', ':']]];

  klausler = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['k', [',', '<'], 'u', 'y', 'p', 'w', 'l', 'm', 'f', 'c', ['[', '{'], [']', '}']], ['o', 'a', 'e', 'i', 'd', 'r', 'n', 't', 'h', 's', ['/', '?']], ['q', ['.', '>'], ['\'', '"'], [';', ':'], 'z', 'x', 'v', 'g', 'b', 'j']];

  cqwerf = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'e', 'r', 'f', 'j', 'y', 'l', 'k', [';', ':'], ['[', '{'], [']', '}']], ['a', 's', 'd', 't', 'g', 'h', 'u', 'o', 'i', 'p', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'n', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  cdvorak = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['[', '{'], [']', '}']], [['\'', '"'], [',', '<'], ['.', '>'], 'p', 'y', 'q', 'f', 'g', 'r', 'k', ['/', '?'], ['=', '+']], ['o', 'a', 'e', 'i', 'u', 'd', 'h', 't', 'n', 's', ['-', '_']], ['z', 'x', 'c', 'v', 'j', 'l', 'm', 'w', 'b', [';', ':']]];

  capewell = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['[', '{'], [']', '}']], [['.', '>'], 'y', 'w', 'd', 'f', 'j', 'p', 'l', 'u', 'q', ['/', '?'], ['=', '+']], ['a', 'e', 'r', 's', 'g', 'b', 't', 'n', 'i', 'o', ['-', '_']], ['x', 'z', 'c', 'v', [';', ':'], 'k', 'm', 'h', [',', '<'], ['\'', '"']]];

  minimak4 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'd', 'r', 'k', 'y', 'u', 'i', 'o', 'p', ['[', '{'], [']', '}']], ['a', 's', 't', 'f', 'g', 'h', 'j', 'e', 'l', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'n', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  minimak8 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'd', 'r', 'k', 'y', 'u', 'i', 'l', 'p', ['[', '{'], [']', '}']], ['a', 's', 't', 'f', 'g', 'h', 'n', 'e', 'o', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'j', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  minimak12 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'd', 'f', 'k', 'y', 'u', 'i', 'l', [';', ':'], ['[', '{'], [']', '}']], ['a', 's', 't', 'r', 'g', 'h', 'n', 'e', 'o', 'p', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'j', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  tarmak1 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'j', 'r', 't', 'y', 'u', 'i', 'o', 'p', ['[', '{'], [']', '}']], ['a', 's', 'd', 'f', 'g', 'h', 'n', 'e', 'l', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'k', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  tarmak2 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'f', 'r', 'g', 'y', 'u', 'i', 'o', 'p', ['[', '{'], [']', '}']], ['a', 's', 'd', 't', 'j', 'h', 'n', 'e', 'l', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'k', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  tarmak3 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'f', 'j', 'g', 'y', 'u', 'i', 'o', 'p', ['[', '{'], [']', '}']], ['a', 'r', 's', 't', 'd', 'h', 'n', 'e', 'l', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'k', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  tarmak4 = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'f', 'p', 'g', 'j', 'u', 'i', 'y', [';', ':'], ['[', '{'], [']', '}']], ['a', 'r', 's', 't', 'd', 'h', 'n', 'e', 'l', 'o', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'k', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  qfmlwy = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'f', 'm', 'l', 'w', 'y', 'u', 'o', 'b', 'j', ['[', '{'], [']', '}']], ['d', 's', 't', 'n', 'r', 'i', 'a', 'e', 'h', [';', ':'], ['\'', '"']], ['z', 'v', 'g', 'c', 'x', 'p', 'k', [',', '<'], ['.', '>'], ['/', '?']]];

  qgmlwb = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'g', 'm', 'l', 'w', 'b', 'y', 'u', 'v', [';', ':'], ['[', '{'], [']', '}']], ['d', 's', 't', 'n', 'r', 'i', 'a', 'e', 'o', 'h', ['\'', '"']], ['z', 'x', 'c', 'f', 'j', 'k', 'p', [',', '<'], ['.', '>'], ['/', '?']]];

  qgmlwy = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'g', 'm', 'l', 'w', 'y', 'f', 'u', 'b', [';', ':'], ['[', '{'], [']', '}']], ['d', 's', 't', 'n', 'r', 'i', 'a', 'e', 'o', 'h', ['\'', '"']], ['z', 'x', 'c', 'v', 'j', 'k', 'p', [',', '<'], ['.', '>'], ['/', '?']]];

  qwkrfy = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'k', 'r', 'f', 'y', 'u', 'i', 'j', 'p', ['[', '{'], [']', '}']], ['d', 's', 'a', 't', 'n', 'h', 'o', 'e', 'l', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'g', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  qwyrfm = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'y', 'r', 'f', 'm', 'l', 'u', 'b', 'p', ['[', '{'], [']', '}']], ['d', 's', 'a', 't', 'n', 'h', 'o', 'e', 'i', [';', ':'], ['\'', '"']], ['z', 'x', 'c', 'v', 'j', 'g', 'k', [',', '<'], ['.', '>'], ['/', '?']]];

  carpalxq = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['q', 'w', 'k', 'r', 'f', 'y', 'u', 'l', 'p', [';', ':'], ['[', '{'], [']', '}']], ['a', 's', 'd', 't', 'g', 'h', 'n', 'e', 'i', 'o', ['\'', '"']], ['z', 'x', 'c', 'v', 'b', 'j', 'm', [',', '<'], ['.', '>'], ['/', '?']]];

  tnwmlc = [[['1', '!'], ['2', '@'], ['3', '#'], ['4', '$'], ['5', '%'], ['6', '^'], ['7', '&'], ['8', '*'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+']], ['t', 'n', 'w', 'm', 'l', 'c', 'b', 'p', 'r', 'h', ['[', '{'], [']', '}']], ['s', 'g', 'x', 'j', 'f', 'k', 'q', 'z', 'v', [';', ':'], ['\'', '"']], ['e', 'a', 'd', 'i', 'o', 'y', 'u', [',', '<'], ['.', '>'], ['/', '?']]];

  source = eval($('#source').val());

  target = eval($('#target').val());

  firstTry = true;

  genKB = function(layout) {
    var k, key, keyboard, l, label, newRow, r, row, _i, _j, _k, _len, _len1, _len2;
    keyboard = '';
    for (r = _i = 0, _len = layout.length; _i < _len; r = ++_i) {
      row = layout[r];
      newRow = '<div class="row" id="row' + r + '">';
      for (k = _j = 0, _len1 = row.length; _j < _len1; k = ++_j) {
        key = row[k];
        newRow += '<div class="key" id="key' + r + '-' + k + '"><div class="keyinner">';
        if (typeof key === 'string') {
          newRow += '<div class="label">' + key.toUpperCase() + '</div>';
        } else {
          for (l = _k = 0, _len2 = key.length; _k < _len2; l = ++_k) {
            label = key[l];
            newRow += '<div class="label layer' + l + '">' + label + '</div>';
          }
        }
        if (r === 1 && (k === 3 || k === 5)) {
          newRow += '<div class="homing"></div>';
        }
        newRow += '</div></div>';
      }
      newRow += '</div>';
      keyboard += newRow;
    }
    return keyboard;
  };

  kp = new window.keypress.Listener();

  sendkeys = function(element, keys) {
    keys = keys.replace(/([^{])\n/g, '$1{enter}');
    bililiteRange(element).bounds('selection').sendkeys(keys).select();
    return element.focus();
  };

  shiftPressed = false;

  lowerShelf = [];

  bind = function(source, target) {
    var k, key, r, row, shift, _fn, _i, _j, _len, _len1;
    kp.reset();
    lowerShelf = [];
    for (r = _i = 0, _len = source.length; _i < _len; r = ++_i) {
      row = source[r];
      _fn = function(key, target, r, k) {
        var keyLower, keyUpper, targetKey;
        targetKey = target[r][k];
        keyLower = {
          on_keyup: function() {
            return $('#key' + r + '-' + k).removeClass('pressed');
          },
          is_exclusive: true
        };
        keyUpper = {
          on_keyup: function() {
            return $('#key' + r + '-' + k).removeClass('pressed');
          },
          prevent_default: true
        };
        if (typeof key === 'string') {
          keyLower.keys = key;
          keyUpper.keys = 'shift ' + key;
        } else {
          keyLower.keys = key[0];
          keyUpper.keys = key[1];
        }
        if (typeof targetKey === 'string') {
          keyLower.on_keydown = function() {
            $('#key' + r + '-' + k).addClass('pressed');
            return keyPress(targetKey);
          };
          keyUpper.on_keydown = function() {
            $('#key' + r + '-' + k).addClass('pressed');
            return keyPress(targetKey.toUpperCase());
          };
        } else {
          lowerShelf += targetKey[0];
          keyLower.on_keydown = function() {
            $('#key' + r + '-' + k).addClass('pressed');
            return keyPress(targetKey[0]);
          };
          keyUpper.on_keydown = function() {
            $('#key' + r + '-' + k).addClass('pressed');
            return keyPress(targetKey[1]);
          };
        }
        return kp.register_many([keyLower, keyUpper]);
      };
      for (k = _j = 0, _len1 = row.length; _j < _len1; k = ++_j) {
        key = row[k];
        _fn(key, target, r, k);
      }
    }
    shift = {
      keys: 'shift',
      on_keyup: function() {
        return shiftPressed = false;
      },
      on_keydown: function() {
        return shiftPressed = true;
      },
      prevent_default: true
    };
    kp.register_combo(shift);
  };

  keyPress = function(key) {
    var text;
    text = $('#textarea');
    if (firstTry) {
      text.html('');
      firstTry = false;
    }
    if (shiftPressed && (key.match(/^[a-z]+$/) || __indexOf.call(lowerShelf, key) >= 0)) {

    } else {
      return sendkeys(document.getElementById('textarea'), key);
    }
  };

  $('#keyboard').html(genKB(target));

  bind(source, target);

  $('#target').change(function() {
    target = eval($(this).val());
    $('#keyboard').html(genKB(target));
    return bind(source, target);
  });

  $('#source').change(function() {
    source = eval($(this).val());
    return bind(source, target);
  });

}).call(this);
